<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:helper="clr-namespace:tkUI.Helper_Classes"
                    xmlns:resources="clr-namespace:tkUI.Properties"
                    >
    <!-- 
    Resource Dictionary for the main styles used in the application.
    Every View that needs this resource should include it.
    -->
    
    <!-- Allows to use Return key in the Navigation-->
    <Style x:Key="CanUseEnter">
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True"/>
    </Style>

    <!-- Selectable RadioButton -->
    <Style x:Key="HeaderQuickBox">
        <Setter Property="TextBlock.FontSize" Value="16"/>
        <Setter Property="TextBlock.Foreground" Value="#002c3d"/>
    </Style>
    <ControlTemplate x:Key="navigationRadioButtons" TargetType="RadioButton">
        <Border Name="navigationBorder" Width="Auto" HorizontalAlignment="Center" BorderBrush="#dddee5" BorderThickness="1" Padding="5,10" Margin="6,0,0,5" CornerRadius="3" Background="#fbfbfc" VerticalAlignment="Center">
            <ContentPresenter Name="RadioButtonText"  TextBlock.FontSize="16" TextBlock.Foreground="#002c3d"/>
        </Border>
        <!-- Styles for feedback -->
        <ControlTemplate.Triggers>
            <!-- When Clicked -->
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="navigationBorder" Property="BorderBrush" Value="#5aa4e2"/>
                <Setter TargetName="RadioButtonText" Property="TextBlock.Foreground" Value="#54a3e2"/>
            </Trigger>
            <!-- When Hover -->
            <Trigger Property="Border.IsMouseOver" Value="True">
                <Setter TargetName="navigationBorder" Property="Background" Value="#cae0f0"/>
                <Setter TargetName="navigationBorder" Property="BorderBrush" Value="#5aa4e2"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <!-- Normal Large Button -->
    <ControlTemplate x:Key="buttonLarge" TargetType="Button">
        <Border Name="buttonBorder" Width="Auto" HorizontalAlignment="Center" BorderBrush="#dddee5" BorderThickness="1" Padding="5,10" Margin="6,0,0,5" CornerRadius="3" Background="#fbfbfc" VerticalAlignment="Center">
            <ContentPresenter Name="buttonText" TextBlock.FontSize="16" TextBlock.Foreground="#002c3d"/>
        </Border>
        <!-- Styles for feedback -->
        <ControlTemplate.Triggers>
            <!-- When Clicked -->
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="buttonBorder" Property="BorderBrush" Value="#5aa4e2"/>
                <Setter TargetName="buttonText" Property="TextBlock.Foreground" Value="#54a3e2"/>
            </Trigger>
            <!-- When Hover -->
            <Trigger Property="Border.IsMouseOver" Value="True">
                <Setter TargetName="buttonBorder" Property="Background" Value="#cae0f0"/>
            </Trigger>
            <!-- When Disabled -->
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="buttonText" Property="TextBlock.Foreground" Value="#66002c3d"/>
                <Setter TargetName="buttonBorder" Property="BorderBrush" Value="#80dddee5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <!-- Image Button -->
    <ControlTemplate x:Key="glyphImageButton" TargetType="Button">
        <Image Name="Icon" Source="{Binding Path=(helper:Icons.Image), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" Width="16" Height="16"
                            RenderOptions.BitmapScalingMode="Fant"/>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Icon" Property="Source" Value="{Binding Path=(helper:IconsClicked.ImageClicked), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Image Buttons Feedback -->
    <Style x:Key="enableStatesEdit">
        <Style.Triggers>
            <Trigger Property="Button.IsEnabled" Value="False">
                <Setter Property="Button.Opacity" Value="0.5"/>
                <Setter Property="Button.ToolTip" Value="No se pueden editar dos empleados al mismo tiempo"/>
            </Trigger>
            <Trigger Property="Button.IsEnabled" Value="True">
                <Setter Property="Button.ToolTip" Value="Editar"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="enableStatesDelete">
        <Style.Triggers>
            <Trigger Property="Button.IsEnabled" Value="False">
                <Setter Property="Button.Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="enableStatesView">
        <Style.Triggers>
            <Trigger Property="Button.IsEnabled" Value="False">
                <Setter Property="Button.Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="loginText">
        <Setter Property="TextBlock.FontFamily" Value="Resources/#NeueHaasGroteskDisp W02"/>
        <Setter Property="TextBlock.FontSize" Value="18"/>
        <Setter Property="TextBlock.Foreground" Value="#002c3d"/>
    </Style>

    <Style x:Key="clickableText">
        <Style.Triggers>
            <Trigger Property="TextBlock.IsMouseOver" Value="True">
                <Setter Property="TextBlock.Foreground" Value="#54a3e2"/>
            </Trigger>
                     
        </Style.Triggers>
    </Style>
    
</ResourceDictionary>